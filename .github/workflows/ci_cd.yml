name: CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
  workflow_dispatch:

env:
  MAIN_PYTHON_VERSION: '3.10'
  DOCUMENTATION_CNAME: 'dataflow-extensions.grantami.docs.pyansys.com'
  LIBRARY_NAME: 'ansys-grantami-dataflow-extensions'
  LIBRARY_NAMESPACE: 'ansys.grantami.dataflow-extensions'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  check-vulnerabilities:
    name: "Check library vulnerabilities"
    runs-on: windows-latest
    steps:
      - uses: ansys/actions/check-vulnerabilities@123a1f17d71f117e0ba29c53d6a0f602e0d8d902  # v10.1.3
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          python-package-name: ${{ env.LIBRARY_NAME }}
          dev-mode: ${{ github.ref != 'refs/heads/main' }}
          use-uv: false

  code-style:
    name: "Code style"
    runs-on: windows-latest
    steps:
      - uses: ansys/actions/code-style@123a1f17d71f117e0ba29c53d6a0f602e0d8d902  # v10.1.3
        with:
          skip-install: false

  doc-style:
    name: "Documentation style"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/doc-style@123a1f17d71f117e0ba29c53d6a0f602e0d8d902  # v10.1.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          vale-version: "2.29.6"

  doc-build:
    name: Documentation Build
    runs-on: windows-latest
    steps:
    - name: "Run Ansys documentation building action"
      uses: ansys/actions/doc-build@123a1f17d71f117e0ba29c53d6a0f602e0d8d902  # v10.1.3
      with:
        check-links: false
        dependencies: "pandoc"
        sphinxopts: "-n -W --keep-going"
        skip-dependencies-cache: true
        group-dependencies-name: "doc"
        optional-dependencies-name: ""

  build-wheelhouse:
    name: "Build wheelhouse for latest Python versions"
    runs-on: windows-latest
    needs: code-style
    permissions:
      attestations: write
      contents: read
      id-token: write
    strategy:
       matrix:
           python-version: ['3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: ansys/actions/build-wheelhouse@123a1f17d71f117e0ba29c53d6a0f602e0d8d902  # v10.1.3
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          operating-system: "win"
          python-version: ${{ matrix.python-version }}
          attest-provenance: true

  unit-tests:
    name: "Run unit tests"
    runs-on: windows-latest
    needs: code-style
    strategy:
       matrix:
           python-version: ['3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: ansys/actions/tests-pytest@123a1f17d71f117e0ba29c53d6a0f602e0d8d902  # v10.1.3
        with:
          python-version: ${{ matrix.python-version }}

  build-library:
    name: "Build library"
    runs-on: windows-latest
    needs: [ build-wheelhouse, unit-tests, doc-build ]
    permissions:
      attestations: write
      contents: read
      id-token: write
    steps:
      - uses: ansys/actions/build-library@123a1f17d71f117e0ba29c53d6a0f602e0d8d902  # v10.1.3
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          attest-provenance: true

  doc-deploy-dev:
    name: "Deploy development documentation"
    runs-on: ubuntu-latest
    needs: [ build-library ]
    if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/doc-deploy-dev@123a1f17d71f117e0ba29c53d6a0f602e0d8d902  # v10.1.3
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          doc-artifact-name: documentation-html
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  release:
    name: "Release"
    runs-on: ubuntu-latest
    needs: [build-library]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - name: "Download the library artifacts from build-library step"
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
        with:
          name: ${{ env.LIBRARY_NAME }}-artifacts
          path: ${{ env.LIBRARY_NAME }}-artifacts

      - name: "Upload artifacts to PyPI using trusted publisher"
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e  # v1.13.0
        with:
          repository-url: "https://upload.pypi.org/legacy/"
          print-hash: true
          packages-dir: ${{ env.LIBRARY_NAME }}-artifacts
          skip-existing: false

      - uses: ansys/actions/release-github@123a1f17d71f117e0ba29c53d6a0f602e0d8d902  # v10.1.3
        name: "Release to GitHub"
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}

  doc-deploy-stable:
    name: "Deploy stable documentation"
    runs-on: ubuntu-latest
    needs: release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/doc-deploy-stable@123a1f17d71f117e0ba29c53d6a0f602e0d8d902  # v10.1.3
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          doc-artifact-name: documentation-html
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  update-changelog:
    name: "Update CHANGELOG (on release)"
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: ansys/actions/doc-deploy-changelog@123a1f17d71f117e0ba29c53d6a0f602e0d8d902  # v10.1.3
        with:
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}
